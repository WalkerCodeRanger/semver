version: 3.0.1-dev.{build}
pull_requests:
  do_not_increment_build_number: true
skip_branch_with_pr: true
image: Visual Studio 2022

configuration: Release

init:
- dotnet --list-sdks
- ps: |
    $VerbosePreference = "continue"
    Invoke-WebRequest -Uri 'https://dot.net/v1/dotnet-install.ps1' -UseBasicParsing -OutFile "$env:temp\dotnet-install.ps1"
    & $env:temp\dotnet-install.ps1 -Architecture x64 -Channel 5.0 -InstallDir "$env:ProgramFiles\dotnet"
- ps: |
    git config --global core.autocrlf true
    Write-Host "Original Appveyor build version: $env:APPVEYOR_BUILD_VERSION"
    $env:PACKAGE_VERSION = $env:APPVEYOR_BUILD_VERSION
    $appveyor_build_version = $env:APPVEYOR_BUILD_VERSION
    $env:GIT_HASH=$env:APPVEYOR_REPO_COMMIT.Substring(0, 10)
    Write-Host "Git commit hash: $env:GIT_HASH"
    If ($env:APPVEYOR_REPO_TAG -and ($env:APPVEYOR_REPO_TAG_NAME -match "^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"))
    {
        $env:PACKAGE_VERSION=$env:APPVEYOR_REPO_TAG_NAME.Substring(1)
        $appveyor_build_version="$env:PACKAGE_VERSION ($env:APPVEYOR_BUILD_NUMBER)"
        Write-Host "Tagged version: $env:PACKAGE_VERSION"
        Write-Host "New build version: $appveyor_build_version"
    }
    $version_split_at_hyphen = $env:PACKAGE_VERSION -split '-'
    $major_minor_patch = $version_split_at_hyphen[0]
    $major_minor_patch_split = $major_minor_patch -split '\.'
    $major = $major_minor_patch_split[0]
    $env:ASSEMBLY_VERSION = "$major.0.0.0"
    $env:FILE_VERSION = "$major_minor_patch.0"
    $env:INFORMATIONAL_Version = "$env:PACKAGE_VERSION+$env:GIT_HASH"
    Write-Host "Computed package version: $env:PACKAGE_VERSION"
    Write-Host "Computed assembly version: $env:ASSEMBLY_VERSION"
    Write-Host "Computed file version: $env:FILE_VERSION"
    Write-Host "Computed info version: $env:INFORMATIONAL_Version"
    Update-AppveyorBuild -Version "$appveyor_build_version"

dotnet_csproj:
  patch: true
  file: '**\Semver.csproj'
  version: '$(PACKAGE_VERSION)'
  package_version: '$(PACKAGE_VERSION)'
  assembly_version: '$(ASSEMBLY_VERSION)'
  file_version: '$(FILE_VERSION)'
  informational_version: "$(INFORMATIONAL_Version)"

before_build:
  - dotnet restore

build:
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true

# Test Discovery was running both xUnit and dotnet test.
# To prevent that, use a test script to run dotnet test.
test_script:
  - dotnet test "Semver.Test"
